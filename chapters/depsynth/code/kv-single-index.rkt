(define (put k v)
  (let ([loc (length! data-store)])
    (append! data-store v)
    (append! index (list k loc (length v)))))
(define (flush)
  (flush! data-store)
  (flush! index))
(define (get k)
  (for ([i (reverse (range 0 (length! index) 3))])
    (when (equal? k (read! index i #:len 1))
      (let ([loc (read! index (+ i 1) #:len 1)]
            [len (read! index (+ i 2) #:len 1)])
        (return (read! data-store loc len)))))
  (return #f))
